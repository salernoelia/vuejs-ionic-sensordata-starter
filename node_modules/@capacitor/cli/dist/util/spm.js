"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkPackageManager = exports.generatePackageFile = exports.findPackageSwiftFile = void 0;
const utils_fs_1 = require("@ionic/utils-fs");
const path_1 = require("path");
const log_1 = require("../log");
async function findPackageSwiftFile(config) {
    const packageDirectory = (0, path_1.resolve)(config.ios.nativeProjectDirAbs, 'CapApp-SPM');
    return (0, path_1.resolve)(packageDirectory, 'Package.swift');
}
exports.findPackageSwiftFile = findPackageSwiftFile;
function readSwiftPackage(packageLine) {
    const packageRegex = RegExp(/.package\(\s*name:\s*"([A-Za-z0-9_-]+)"/);
    const lineMatch = packageLine.match(packageRegex);
    if (lineMatch === null) {
        return null;
    }
    return lineMatch[1];
}
async function generatePackageFile(config, plugins) {
    var _a, _b;
    const swiftPluginList = [];
    for (const plugin of plugins) {
        const relPath = (0, path_1.relative)(config.ios.nativeXcodeProjDirAbs, plugin.rootPath);
        const pluginStatement = `.package(name: "${(_a = plugin.ios) === null || _a === void 0 ? void 0 : _a.name}", path: "${relPath}"),`;
        swiftPluginList.push(pluginStatement);
    }
    const packageSwiftFile = await findPackageSwiftFile(config);
    try {
        if (!(0, utils_fs_1.existsSync)(packageSwiftFile)) {
            log_1.logger.error(`Unable to find ${packageSwiftFile}. Try updating it manually`);
        }
        const packageSwiftText = (0, utils_fs_1.readFileSync)(packageSwiftFile, 'utf-8');
        const packageSwiftTextLines = packageSwiftText.split('\n');
        let textToWrite = '';
        const packages = [];
        for (const lineIndex in packageSwiftTextLines) {
            const line = packageSwiftTextLines;
            const index = parseInt(lineIndex);
            if (line[index].includes('dependencies: [') &&
                line[index + 1].includes('.package(url: "https://github.com/ionic-team/capacitor6-spm-test.git", branch: "main")')) {
                let tempIndex = index + 1;
                while (!line[tempIndex].includes('],')) {
                    const swiftPack = readSwiftPackage(line[tempIndex]);
                    if (swiftPack !== null) {
                        packages.push(swiftPack);
                    }
                    tempIndex++;
                }
            }
            if (line[index].includes('.package(url: "https://github.com/ionic-team/capacitor6-spm-test.git", branch: "main")')) {
                if (line[index].endsWith(',')) {
                    textToWrite += line[index] + '\n';
                }
                else {
                    textToWrite += line[index] + ',\n';
                }
                for (const swiftPlugin of swiftPluginList) {
                    const name = (_b = readSwiftPackage(swiftPlugin)) !== null && _b !== void 0 ? _b : '';
                    if (!packages.includes(name)) {
                        textToWrite += '        ' + swiftPlugin + '\n';
                    }
                }
            }
            else {
                textToWrite += line[index] + '\n';
            }
        }
        (0, utils_fs_1.writeFileSync)(packageSwiftFile, textToWrite);
    }
    catch (err) {
        log_1.logger.error(`Unable to read ${packageSwiftFile}. Verify it is not already open. ${err}`);
    }
}
exports.generatePackageFile = generatePackageFile;
async function checkPackageManager(config) {
    const iosDirectory = config.ios.nativeProjectDirAbs;
    if ((0, utils_fs_1.existsSync)((0, path_1.resolve)(iosDirectory, 'CapApp-SPM'))) {
        return 'SPM';
    }
    return 'Cocoapods';
}
exports.checkPackageManager = checkPackageManager;
